$date
	Sat May 21 17:50:45 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module binary_test_tb $end
$var wire 8 ! result [7:0] $end
$var reg 1 " clk $end
$var reg 8 # x1 [7:0] $end
$var reg 8 $ x2 [7:0] $end
$var reg 8 % x3 [7:0] $end
$var reg 8 & x4 [7:0] $end
$var reg 8 ' x5 [7:0] $end
$var reg 8 ( x6 [7:0] $end
$var reg 8 ) x7 [7:0] $end
$var reg 8 * x8 [7:0] $end
$var reg 8 + y1 [7:0] $end
$var reg 8 , y2 [7:0] $end
$var reg 8 - y3 [7:0] $end
$var reg 8 . y4 [7:0] $end
$var reg 8 / y5 [7:0] $end
$var reg 8 0 y6 [7:0] $end
$var reg 8 1 y7 [7:0] $end
$var reg 8 2 y8 [7:0] $end
$scope module bt $end
$var wire 8 3 x1 [7:0] $end
$var wire 8 4 x2 [7:0] $end
$var wire 8 5 x3 [7:0] $end
$var wire 8 6 x4 [7:0] $end
$var wire 8 7 x5 [7:0] $end
$var wire 8 8 x6 [7:0] $end
$var wire 8 9 x7 [7:0] $end
$var wire 8 : x8 [7:0] $end
$var wire 8 ; y1 [7:0] $end
$var wire 8 < y2 [7:0] $end
$var wire 8 = y3 [7:0] $end
$var wire 8 > y4 [7:0] $end
$var wire 8 ? y5 [7:0] $end
$var wire 8 @ y6 [7:0] $end
$var wire 8 A y7 [7:0] $end
$var wire 8 B y8 [7:0] $end
$var reg 8 C result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 C
b1111111 B
b1100111 A
b1111001 @
b1111111 ?
b1111111 >
b1111111 =
b1111111 <
b1111111 ;
b11111111 :
b11111111 9
b1111111 8
b11111111 7
b11000111 6
b11111111 5
b11111111 4
b11111111 3
b1111111 2
b1100111 1
b1111001 0
b1111111 /
b1111111 .
b1111111 -
b1111111 ,
b1111111 +
b11111111 *
b11111111 )
b1111111 (
b11111111 '
b11000111 &
b11111111 %
b11111111 $
b11111111 #
0"
b0 !
$end
#5000
1"
#10000
0"
b1100011 2
b1100011 B
b10011111 *
b10011111 :
b1111111 1
b1111111 A
b1111101 0
b1111101 @
b11111111 (
b11111111 8
b11100011 &
b11100011 6
b1 +
b1 ;
b10 #
b10 3
#15000
1"
#20000
b10000000 !
b10000000 C
0"
b11110001 *
b11110001 :
b1111 0
b1111 @
b11110011 '
b11110011 7
b11001111 &
b11001111 6
b11110111 %
b11110111 5
b1110001 ,
b1110001 <
b11111111 +
b11111111 ;
b10000000 #
b10000000 3
#25000
1"
#30000
0"
#35000
1"
#40000
0"
